#user selects csv-File
CC "AdoScript" FILE_DIALOG open filter1: "CSV-files" type1: " * .csv" default-ext: "csv"
IF ( path = " " ) {
	CC "AdoScript" ERRORBOX "Keine Datei ausgewählt!"
EXIT
}
SET csvpath: (path)

#read csv-File
CC "AdoScript" FREAD file:(csvpath) 
SET sCsvData: (text)
# get the id of the current model
SEND "GET_ACTIVE_MODEL" to:"Modeling" answer:modelid
IF (modelid = "")
{
   CC "AdoScript" ERRORBOX "Öffne zuerst ein Model!"
   EXIT
}
# We retrieve all objects of the class with the name Start
CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(VAL modelid) classname: "brauStart"
# We make sure that there is exactly 1 Start object, otherwise we terminate
IF (tokcnt(objids) != 1) {
    CC "AdoScript" WARNINGBOX "Es braucht genau ein brauStart-Objekt!"
    EXIT
}
SET startids:(objids)
WHILE (tokcnt(startids)>0) {
    # We store the current list of remaining objects for iterating over them
    SET currentbatch:(startids)    
    # We iterate over all remaining objects 
    FOR o in:(currentbatch) {
		SET startid: (VAL o)
	}
	SET startids:(tokdiff(startids,o))
}

#We reset the Program in brauStart
CC "Core" GET_CLASS_ID classname:"brauStart"
SET startclassid:(classid)
 CC "Core" GET_ATTR_ID classid: (startclassid) attrname: ("Programm")
 SET id_record: (attrid)
 
 CC "Core" GET_REC_ATTR_ROW_COUNT objid: (startid) attrid: (id_record)
 SET counter: (count)
 WHILE ((counter)>0) {
 	CC "Core" GET_REC_ATTR_ROW_ID objid: (startid)  attrid: (id_record) index: (counter)
	SETL rowID: (rowid)
	CC "Core" REMOVE_REC_ROW objid: (startid)  attrid: (id_record) rowid: (rowID)
	SET counter: (counter-1)
 }
 
 #We determine the Columns in the CSV-File
 SET nRow:0
 SET nColumn:0
 SET datColumn:0
 SET sudColumn:1
 SET nrColumn:2
 SET dayColumn:3
 
 #Get list separator
 CC "Core" GET_ATTR_VAL objid: (startid) attrname: ("Listentrennzeichen")
 SET sepVal: (val)
 IF (sepVal = "Komma") {
	SET separator: ","
 }
 ELSE {
	SET separator: ";"
 }
 
FOR sRow in: (sCsvData) sep: "\n" {
	SET nColumn:0
	FOR sCell in: (sRow) sep: (separator) {
		IF ( search(lower(sCell), "datum", 0) > -1) {
			SET datColumn: (nColumn)
		}
		ELSIF (lower(sCell) = "sud") {
			SET sudColumn: (nColumn)
		}
		ELSIF ( search(lower(sCell), "tagzahl", 0)> -1) {
			SET dayColumn: (nColumn)
		}
		ELSIF ( search(lower(sCell), "sudnr", 0)>-1) {
			SET nrColumn:(nColumn)
		}
	SET nColumn: (nColumn + 1)
	}
}
 
 #We fill the Program in brauStart with the new CSV-values
 SET nRow:0
SET nColumn:0
SET datumVal: ""
SET sudVal: ""
SET dayVal: ""
SET nrVal: ""
FOR sRow in: (sCsvData) sep: "\n" {
  SET nColumn:0
  IF (nRow > 0) {
	  FOR sCell in: (sRow) sep: (separator) {
		IF (nColumn = datColumn) {
			SET datumVal: (sCell)
			IF (LEN datumVal = 10) {
				SET datumVal: ((datumVal SUB 6) + (datumVal SUB 7) + (datumVal SUB 8) + (datumVal SUB 9) + ":" + (datumVal SUB 3) + (datumVal SUB 4) + ":" + (datumVal SUB 0) + (datumVal SUB 1))
			}
		}
		ELSIF (nColumn = sudColumn) {
			SET sudVal: (sCell)
		}
		ELSIF (nColumn = dayColumn) {
			SET dayVal: (sCell)
		}
		ELSIF (nColumn = nrColumn) {
			SET nrVal: (sCell)
		}
				SET nColumn: (nColumn + 1)   
	}
	IF (sudVal != "") {
			 CC "Core" ADD_REC_ROW objid: (startid) attrid: (id_record)
			 SETL nNewRowID: (rowid)
			CC "Core" SET_ATTR_VAL objid: (nNewRowID) attrname:"Datum" val:(datumVal)
			CC "Core" SET_ATTR_VAL objid: (nNewRowID) attrname:"Sud" val:(sudVal)
			CC "Core" SET_ATTR_VAL objid: (nNewRowID) attrname: "Tag" val:(VAL dayVal)
			CC "Core" SET_ATTR_VAL objid: (nNewRowID) attrname: "Sudnr" val:(nrVal)
		}
		SET datumVal:""
		SET sudVal:""
  }
SET nRow: (nRow + 1)
}